import type { QueryClientConfig, VueQueryPluginOptions } from "@tanstack/vue-query";
import type { RuntimeConfig } from "nuxt/schema";
export declare const NAME: "vue-query-nuxt";
export declare const configKey: "vueQuery";
declare const composables: readonly ["useQuery", "useQueries", "useInfiniteQuery", "useMutation", "useIsFetching", "useIsMutating", "useQueryClient"];
type VueQueryComposables = typeof composables;
export interface ModuleOptions {
    stateKey: string;
    autoImports: VueQueryComposables | false;
    queryClientOptions: QueryClientConfig | undefined;
    vueQueryPluginOptions: VueQueryPluginOptions;
}
export declare const defaults: ModuleOptions;
export declare function getVueQueryOptions(config: RuntimeConfig): ModuleOptions;
export {};
